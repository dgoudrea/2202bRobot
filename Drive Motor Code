//#include <IRremote.h>
//#include <IRremoteInt.h>
//#include <IRremoteTools.h>
#include <Servo.h>
#include <I2CEncoder.h>
#include <uSTimer2.h>
#include <CharliePlexM.h>

//Ultrasonic Sensor
const int ci_Ultrasonic_Ping = 2;   //input plug
const int ci_Ultrasonic_Data = 3;   //output plug
unsigned long ul_Echo_Time;

//IR Sensor
//int IR_Pin = 7;
//IRrecv irrecv(IR_Pin);
//decode_results results;

//Motors
Servo servo_RightMotor;
Servo servo_LeftMotor;
const int ci_Right_Motor = 9;
const int ci_Left_Motor = 8;
I2CEncoder encoder_RightMotor;
I2CEncoder encoder_LeftMotor;
const int ci_Left_Motor_Stop = 1500;        // 200 for brake mode; 1500 for stop
const int ci_Right_Motor_Stop = 1500;
Servo Arm_servo;    //"Door" servo
int Arm_Motor = 7;
void setup() {

//Wire.begin();
Serial.begin(9600);

//Ultrasonic Sensor Set-up
pinMode(ci_Ultrasonic_Ping, OUTPUT);
pinMode(ci_Ultrasonic_Data, INPUT);

//IR Sensor Set-uo
//irrecv.enableIRIn(); //Startsthe receiver module

//Drive Motor Setup
pinMode(ci_Right_Motor, OUTPUT);
servo_RightMotor.attach(ci_Right_Motor);
pinMode(ci_Left_Motor, OUTPUT);
servo_LeftMotor.attach(ci_Left_Motor);
pinMode(Arm_Motor, OUTPUT);
Arm_servo.attach(Arm_Motor);

//Drive Encoder Setup

/*encoder_RightMotor.init(1.0/3.0*MOTOR_393_SPEED_ROTATIONS, MOTOR_393_TIME_DELTA);
encodre_RightMotor.setReversed(true); //adjust for positive count while moving forward
encoder_LeftMotor.init(1.0/3.0*MOTOR_393_SPEED_ROTATIONS, MOTOR_393_TIME_DELTA);
encodre_LeftMotor.setReversed(false); //adjust for positive count while moving forward*/
}

void loop() {

//For arm motors:
//Use  1900 and 800

//servo_RightMotor.writeMicroseconds(6000); //Test these speeds
//servo_LeftMotor.writeMicroseconds(6000);
Arm_servo.writeMicroseconds(1900);
delay(2000);
Arm_servo.writeMicroseconds(800);
delay(20000);


Serial.println(ul_Echo_Time/58);

/*if((ul_Echo_Time/58) > 3){
  servo_RightMotor.writeMicroseconds(1800); //Test these speeds
  servo_LeftMotor.writeMicroseconds(1800);
}
else{
  servo_RightMotor.writeMicroseconds(1500); 
  servo_LeftMotor.writeMicroseconds(1500);
}
*/
}

void Ping()
{
  //Ping Ultrasonic
  //Send the Ultrasonic Range Finder a 10 microsecond pulse per tech spec
  digitalWrite(ci_Ultrasonic_Ping, HIGH);
  delayMicroseconds(10);  //The 10 microsecond pause where the pulse in "high"
  digitalWrite(ci_Ultrasonic_Ping, LOW);
  //use command pulseIn to listen to Ultrasonic_Data pin to record the
  //time that it takes from when the Pin goes HIGH until it goes LOW 
  ul_Echo_Time = pulseIn(ci_Ultrasonic_Data, HIGH, 10000);
  //Print Ultrasonic Readings 
  Serial.print("Time (microseconds): ");
  Serial.print(ul_Echo_Time, DEC);
  Serial.print(", Inches: ");
  Serial.print(ul_Echo_Time/148); //divide time by 148 to get distance in inches
  Serial.print(", cm: ");
  Serial.println(ul_Echo_Time/58); //divide time by 58 to get distance in cm 
}
